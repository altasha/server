--source include/have_innodb.inc

--disable_query_log
call mtr.add_suppression("InnoDB: Plugin initialization aborted");
call mtr.add_suppression("Plugin 'InnoDB' init function returned error");
call mtr.add_suppression("Plugin 'InnoDB' registration as a STORAGE ENGINE failed");
call mtr.add_suppression("InnoDB: Database page corruption on disk or a failed file read of tablespace test/t1 page");
call mtr.add_suppression("InnoDB: Failed to read file .* at offset 3: Page read from tablespace is corrupted.");
call mtr.add_suppression("InnoDB: Set innodb_force_recovery to skip the corrupted page during redo log apply.");
--enable_query_log

--echo # Case 1: Recovery with corrupted page and no MLOG_INIT_* redo log records.

CREATE TABLE t1(f1 INT)ENGINE = InnoDB;
INSERT INTO t1 VALUES(1);

let $restart_parameters = --innodb_flush_log_at_trx_commit=1;
--source include/restart_mysqld.inc
let $MYSQLD_DATADIR=`select @@datadir`;
let t1_IBD = $MYSQLD_DATADIR/test/t1.ibd;

INSERT INTO t1 VALUES(2);
--source include/kill_mysqld.inc

--echo # Corrupt the table of t1

perl;
use strict;
use warnings;
use Fcntl qw(:DEFAULT :seek);

my $ibd_file = $ENV{'t1_IBD'};

my $chunk;
my $len;

sysopen IBD_FILE, $ibd_file, O_RDWR || die "Unable to open $ibd_file";
sysseek IBD_FILE, 16384 * 3, SEEK_CUR;
$chunk = '\xAA\xAA\xAA\xAA';
syswrite IBD_FILE, $chunk, 4;

close IBD_FILE;

EOF

--source include/start_mysqld.inc
--error ER_UNKNOWN_STORAGE_ENGINE
SELECT * FROM t1;
let $restart_parameters="--innodb_force_recovery=1";
--source include/restart_mysqld.inc
SELECT * FROM t1;
DROP TABLE t1;


let $restart_parameters = --innodb_flush_log_at_trx_commit=1;
--source include/restart_mysqld.inc
let $MYSQLD_DATADIR=`select @@datadir`;
let t1_IBD = $MYSQLD_DATADIR/test/t1.ibd;

--echo # Case 2: Recovery with corrupted page with MLOG_INIT_* redo log
CREATE TABLE t1(f1 INT)ENGINE=InnoDB;
INSERT INTO t1 VALUES(1);
--source include/kill_mysqld.inc
--echo # Corrupt the table of t1

perl;
use strict;
use warnings;
use Fcntl qw(:DEFAULT :seek);

my $ibd_file = $ENV{'t1_IBD'};

my $chunk;
my $len;

sysopen IBD_FILE, $ibd_file, O_RDWR || die "Unable to open $ibd_file";
sysseek IBD_FILE, 16384 * 3, SEEK_CUR;
$chunk = '\xAA\xAA\xAA\xAA';
syswrite IBD_FILE, $chunk, 4;

close IBD_FILE;

EOF

# During recovery, there is no need to do I/O for MLOG_INIT_* records
--source include/start_mysqld.inc

SELECT * FROM t1;
DROP TABLE t1;
